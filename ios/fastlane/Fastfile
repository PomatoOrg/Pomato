# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane


import "./Utility.rb"
import "./user-defined/build.rb"
import "./user-defined/certificate.rb"

default_platform(:ios)
platform :ios do
  
  # target="KFC-Enterprise"

  # configurationArray=["Release"]

  # schemeArray=["KFC-Enterprise"]

  # exportMethod="enterprise"

  # provisioningProfilesMap={
  #   "com.bindo.kfc-enterprise"=> "match InHouse com.bindo.kfc-enterprise",
  # }

  # outputDirectory="./dist/iOS/#{time.month}-#{time.day}/"

  

  # lane :custom_build do |options|
  #   time=Time.now
  #   configuration=options[:configuration]
  #   scheme=options[:scheme]
  #   version = get_version_number(target: target,configuration:configuration)
  #   ipaName="#{target}_#{configuration}_#{version}_#{time.hour}-#{time.min}-#{time.sec}.ipa"
  #   increment_build_number()
  #   kill_port()
  #   kill_all_terminal()
  #   build_ios_app(
  #     configuration: configuration,
  #     scheme: scheme,
  #     clean: true,
  #     include_bitcode:true,
  #     output_directory: outputDirectory, # Destination directory. Defaults to current directory.
  #     output_name: ipaName,       # specify the name of the .ipa file to generate (including file extension)
  #     export_method: exportMethod,
  #     export_options: {
  #       provisioningProfiles: provisioningProfilesMap,
  #     }
  #   )
  # end
  # lane :build_all do
  #   buildCount=configurationArray.length
  #   for i in 0...buildCount
  #     custom_build(configuration:configurationArray.at(i),scheme:schemeArray.at(i))
  #   end
  # end


  # lane :build_apps do
  #   build_pomato()
  # end

  # desc <<-EOF
  # iOS 证书自动配置
  # -注意-注意-注意-
  # 密码为 bindo
  # EOF
  # lane :pull_cer do  
  #   pull_config_pomato()
  # end
end
